{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\2023\\\\CODING DOJO\\\\MERN\\\\socketio_project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [socket] = useState(() => io(':8000'));\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  useEffect(() => {\n    // Listen for incoming chat messages from the server\n    socket.on('chat_message', data => {\n      const senderId = data.senderId;\n      const message = data.message;\n\n      // Use the sender's socket ID and message as needed\n      console.log('Received message from:', senderId);\n      console.log('Message:', message);\n      setChatLog(prevChatLog => [...prevChatLog, data]);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('chat_message');\n    };\n  }, []);\n  const handleSendMessage = () => {\n    // Emit the chat message to the server\n    socket.emit('chat_message', message);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chatLog.message.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hVMkXOWQB5u7mwmMlGqGDw3QAfc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","App","_s","socket","message","setMessage","chatLog","setChatLog","on","data","senderId","console","log","prevChatLog","off","handleSendMessage","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/2023/CODING DOJO/MERN/socketio_project/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nfunction App() {\n  const [socket] = useState(() => io(':8000'));\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n\n  useEffect(() => {\n    // Listen for incoming chat messages from the server\n    socket.on('chat_message', data => {\n\n      const senderId = data.senderId;\n      const message = data.message;\n\n  // Use the sender's socket ID and message as needed\n  console.log('Received message from:', senderId);\n  console.log('Message:', message);\n\n      setChatLog(prevChatLog => [...prevChatLog, data]);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('chat_message');\n    };\n  }, []);\n\n  const handleSendMessage = () => {\n    // Emit the chat message to the server\n    socket.emit('chat_message', message);\n    setMessage('');\n  };\n\n  return (\n    <div>\n      <h1>Chat App</h1>\n      <div>\n        {chatLog.message.map((msg, index) => (\n          <p key={index}>{msg}</p>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={message}\n        onChange={e => setMessage(e.target.value)}\n      />\n      <button onClick={handleSendMessage}>Send</button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,CAAC,GAAGP,QAAQ,CAAC,MAAME,EAAE,CAAC,OAAO,CAAC,CAAC;EAC5C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAM,MAAM,CAACK,EAAE,CAAC,cAAc,EAAEC,IAAI,IAAI;MAEhC,MAAMC,QAAQ,GAAGD,IAAI,CAACC,QAAQ;MAC9B,MAAMN,OAAO,GAAGK,IAAI,CAACL,OAAO;;MAEhC;MACAO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;MAC/CC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAER,OAAO,CAAC;MAE5BG,UAAU,CAACM,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAEJ,IAAI,CAAC,CAAC;IACnD,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXN,MAAM,CAACW,GAAG,CAAC,cAAc,CAAC;IAC5B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B;IACAZ,MAAM,CAACa,IAAI,CAAC,cAAc,EAAEZ,OAAO,CAAC;IACpCC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEL,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBrB,OAAA;MAAAiB,QAAA,EACGX,OAAO,CAACF,OAAO,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC9BxB,OAAA;QAAAiB,QAAA,EAAgBM;MAAG,GAAXC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAEC,CAAC,IAAIvB,UAAU,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrB,OAAA;MAAQ8B,OAAO,EAAEf,iBAAkB;MAAAE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAACnB,EAAA,CA/CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
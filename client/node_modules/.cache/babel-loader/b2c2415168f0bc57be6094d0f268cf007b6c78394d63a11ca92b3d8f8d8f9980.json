{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\2023\\\\CODING DOJO\\\\MERN\\\\socketio_project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [socket] = useState(() => io(':8000'));\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [username, setUsername] = useState('');\n  const [userList, setUserList] = useState([]);\n  const [userJoin, setUserJoin] = useState('');\n  const [userDisconnect, setUserDisconnect] = useState('');\n  const inputValue = '';\n  useEffect(() => {\n    // Send username to server for login\n\n    // Listen for incoming chat messages from the server\n    socket.on('chat_message', data => {\n      const senderId = data.username;\n      const message = data.message;\n\n      // Use the sender's socket ID and message as needed\n      console.log('Received message from:', senderId);\n      console.log('Message:', message);\n      setChatLog(prevChatLog => [...prevChatLog, data]);\n    });\n    socket.on('previousMessages', chatLog => {\n      setChatLog(chatLog);\n    });\n    socket.on('userList', userList => {\n      setUserList(userList);\n    });\n    socket.on('userJoin', username => {\n      setUserJoin(username);\n    });\n    socket.on('userDisconnect', username => {\n      setUserDisconnect(username);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('chat_message');\n      socket.off('userList');\n    };\n  }, []);\n  const handleGetUser = () => {\n    setUsername(inputValue);\n    // Emit the chat message to the server\n    socket.emit('login', username);\n  };\n  const handleSendMessage = () => {\n    // Emit the chat message to the server\n    socket.emit('chat_message', message);\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetUser,\n        children: \"Start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), username ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [username, userJoin ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userJoin, \" has joined the chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 27\n        }, this) : null, userDisconnect ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userDisconnect, \" has left the chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, this) : null, chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [msg.username, \" said\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EnFKRFmMLxKiLt8xQLpEkxEUuDY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","App","_s","socket","message","setMessage","chatLog","setChatLog","username","setUsername","userList","setUserList","userJoin","setUserJoin","userDisconnect","setUserDisconnect","inputValue","on","data","senderId","console","log","prevChatLog","off","handleGetUser","emit","handleSendMessage","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onClick","map","msg","index","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/2023/CODING DOJO/MERN/socketio_project/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nfunction App () {\n  const [socket] = useState (() => io (':8000'));\n  const [message, setMessage] = useState ('');\n  const [chatLog, setChatLog] = useState ([]);\n  const [username, setUsername] = useState ('');\n  const [userList, setUserList] = useState ([]);\n  const [userJoin, setUserJoin] = useState ('');\n  const [userDisconnect, setUserDisconnect] = useState ('');\n  const inputValue='';\n  useEffect (() => {\n    // Send username to server for login\n\n    // Listen for incoming chat messages from the server\n    socket.on ('chat_message', data => {\n      const senderId = data.username;\n      const message = data.message;\n\n      // Use the sender's socket ID and message as needed\n      console.log ('Received message from:', senderId);\n      console.log ('Message:', message);\n\n      setChatLog (prevChatLog => [...prevChatLog, data]);\n    });\n    socket.on ('previousMessages', chatLog => {\n      setChatLog (chatLog);\n    });\n    socket.on ('userList', userList => {\n      setUserList (userList);\n    });\n    socket.on ('userJoin', username => {\n      setUserJoin (username);\n    });\n    socket.on ('userDisconnect', username => {\n      setUserDisconnect (username);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off ('chat_message');\n      socket.off ('userList');\n    };\n  }, []);\n\n  const handleGetUser = () => {\n    setUsername (inputValue);\n    // Emit the chat message to the server\n    socket.emit ('login', username);\n  };\n\n  const handleSendMessage = () => {\n    // Emit the chat message to the server\n    socket.emit ('chat_message', message);\n    setMessage ('');\n  };\n\n  return (\n    <div>\n      <h1>Chat App</h1>\n      <div>\n        <input type=\"text\" value={inputValue} />\n        <button onClick={handleGetUser}>Start chatting</button>\n      </div>\n      {username\n        ? <div>\n            <div>\n              {username}\n              {userJoin ? <p>{userJoin} has joined the chat</p> : null}\n              {userDisconnect\n                ? <p>{userDisconnect} has left the chat</p>\n                : null}\n              {chatLog.map ((msg, index) => (\n                <div key={index}>\n                  <p>{msg.username} said</p>\n                  <p>{msg.message}</p>\n                </div>\n              ))}\n            </div>\n            <input\n              type=\"text\"\n              value={message}\n              onChange={e => setMessage (e.target.value)}\n            />\n            <button onClick={handleSendMessage}>Send</button>\n          </div>\n        : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\2023\\\\CODING DOJO\\\\MERN\\\\socketio_project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // notice that we pass a callback function to initialize the socket\n  // we don't need to destructure the 'setSocket' function since we won't be updating the socket state\n  const [socket] = useState(() => io(':8000'));\n  useEffect(() => {\n    // we need to set up all of our event listeners\n    // in the useEffect callback function\n    console.log('Is this running?');\n    socket.on(\"event_to_all_other_clients\", data => console.log(data));\n\n    // note that we're returning a callback function\n    // this ensures that the underlying socket will be closed if App is unmounted\n    // this would be more critical if we were creating the socket in a subcomponent\n    return () => socket.disconnect(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Socket Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"02lsRUzKe0Wr+0z4HpDOcMYrrnE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","App","_s","socket","console","log","on","data","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/2023/CODING DOJO/MERN/socketio_project/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n \nfunction App() {\n  // notice that we pass a callback function to initialize the socket\n  // we don't need to destructure the 'setSocket' function since we won't be updating the socket state\n  const [socket] = useState(() => io(':8000'));\n \n  useEffect(() => {\n    // we need to set up all of our event listeners\n    // in the useEffect callback function\n    console.log('Is this running?');\n    socket.on(\"event_to_all_other_clients\", data => console.log(data));\n \n    // note that we're returning a callback function\n    // this ensures that the underlying socket will be closed if App is unmounted\n    // this would be more critical if we were creating the socket in a subcomponent\n    return () => socket.disconnect(true);\n  }, []);\n \n  return (\n    <div className=\"App\">\n      <h1>Socket Test</h1>\n    </div>\n  );\n}\n \nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAM,CAACC,MAAM,CAAC,GAAGP,QAAQ,CAAC,MAAME,EAAE,CAAC,OAAO,CAAC,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA;IACAO,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BF,MAAM,CAACG,EAAE,CAAC,4BAA4B,EAAEC,IAAI,IAAIH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC,CAAC;;IAElE;IACA;IACA;IACA,OAAO,MAAMJ,MAAM,CAACK,UAAU,CAAC,IAAI,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBV,OAAA;MAAAU,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAACZ,EAAA,CAtBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAwBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\2023\\\\CODING DOJO\\\\MERN\\\\socketio_project\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [socket] = useState(() => io(':8000'));\n  const [message, setMessage] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const [username, setUsername] = useState('');\n  const [userList, setUserList] = useState([]);\n  const [userJoin, setUserJoin] = useState('');\n  const [userDisconnect, setUserDisconnect] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const scrollingElement = document.scrollingElement || document.body;\n  useEffect(() => {\n    // Send username to server for login\n\n    // Listen for incoming chat messages from the server\n    socket.on('chat_message', data => {\n      const senderId = data.username;\n      const message = data.message;\n\n      // Use the sender's socket ID and message as needed\n      console.log('Received message from:', senderId);\n      console.log('Message:', message);\n      setChatLog(prevChatLog => [...prevChatLog, data]);\n    });\n    socket.on('previousMessages', chatLog => {\n      setChatLog(chatLog);\n    });\n    socket.on('userList', userList => {\n      setUserList(userList);\n    });\n    socket.on('userJoin', username => {\n      setUserJoin(username);\n    });\n    socket.on('userDisconnect', username => {\n      setUserDisconnect(username);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off('chat_message');\n      socket.off('userList');\n    };\n  }, []);\n  function scrollToBottom() {\n    var container = document.getElementById(\"Acontainer\");\n    var messages = document.getElementById(\"messages\");\n    var lastMessage = messages.lastElementChild;\n    lastMessage.scrollIntoView();\n  }\n  const handleGetUser = () => {\n    setUsername(inputValue);\n    // Emit the chat message to the server\n    socket.emit('login', inputValue);\n  };\n  const handleSendMessage = () => {\n    // Emit the chat message to the server\n    socket.emit('chat_message', message);\n    scrollToBottom();\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGetUser,\n        children: \"Start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), username ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"messages\",\n          children: msg.username == username ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-msg msg-you\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You said \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-msg msg-others\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [msg.username, \" said \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 23\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [userJoin && userJoin != username ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userJoin, \" has joined the chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this) : null, userDisconnect ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [userDisconnect, \" has left the chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k68yYVF74nd4tQbdVm4mm/52EXA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","App","_s","socket","message","setMessage","chatLog","setChatLog","username","setUsername","userList","setUserList","userJoin","setUserJoin","userDisconnect","setUserDisconnect","inputValue","setInputValue","scrollingElement","document","body","on","data","senderId","console","log","prevChatLog","off","scrollToBottom","container","getElementById","messages","lastMessage","lastElementChild","scrollIntoView","handleGetUser","emit","handleSendMessage","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","msg","index","className","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/2023/CODING DOJO/MERN/socketio_project/client/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nfunction App () {\n  const [socket] = useState (() => io (':8000'));\n  const [message, setMessage] = useState ('');\n  const [chatLog, setChatLog] = useState ([]);\n  const [username, setUsername] = useState ('');\n  const [userList, setUserList] = useState ([]);\n  const [userJoin, setUserJoin] = useState ('');\n  const [userDisconnect, setUserDisconnect] = useState ('');\n  const [inputValue, setInputValue] = useState ('');\n  const scrollingElement = (document.scrollingElement || document.body);\n\n  useEffect (() => {\n    // Send username to server for login\n\n    // Listen for incoming chat messages from the server\n    socket.on ('chat_message', data => {\n      const senderId = data.username;\n      const message = data.message;\n\n      // Use the sender's socket ID and message as needed\n      console.log ('Received message from:', senderId);\n      console.log ('Message:', message);\n\n      setChatLog (prevChatLog => [...prevChatLog, data]);\n    });\n    socket.on ('previousMessages', chatLog => {\n      setChatLog (chatLog);\n    });\n    socket.on ('userList', userList => {\n      setUserList (userList);\n    });\n    socket.on ('userJoin', username => {\n      setUserJoin (username);\n    });\n    socket.on ('userDisconnect', username => {\n      setUserDisconnect (username);\n    });\n\n    // Clean up the event listener when the component unmounts\n    return () => {\n      socket.off ('chat_message');\n      socket.off ('userList');\n    };\n  }, []);\n\n  function scrollToBottom() {\n    var container = document.getElementById(\"Acontainer\");\n    var messages = document.getElementById(\"messages\");\n    var lastMessage = messages.lastElementChild;\n    lastMessage.scrollIntoView();\n  }\n \n\n  const handleGetUser = () => {\n    setUsername (inputValue);\n    // Emit the chat message to the server\n    socket.emit ('login', inputValue);\n  };\n\n  const handleSendMessage = () => {\n    // Emit the chat message to the server\n    socket.emit ('chat_message', message);\n    scrollToBottom();\n    setMessage ('');\n  };\n\n  return (\n    <div id=\"App\">\n      <h1>Chat App</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={e => setInputValue (e.target.value)}\n        />\n        <button onClick={handleGetUser}>Start chatting</button>\n      </div>\n      {username\n        ? <div>\n            <div>\n\n              {chatLog.map ((msg, index) => (\n                <div key={index} id=\"messages\">\n                  {msg.username == username\n                    ? <div className=\"box-msg msg-you\">\n                        <p>You said </p>\n                        <p>{msg.message}</p>\n                      </div>\n                    : <div className=\"box-msg msg-others\">\n                        <p>{msg.username} said </p>\n                        <p>{msg.message}</p>\n                      </div>}\n                </div>\n              ))}\n            </div>\n            <div>\n              {userJoin && userJoin != username\n                ? <p>{userJoin} has joined the chat</p>\n                : null}\n              {userDisconnect\n                ? <p>{userDisconnect} has left the chat</p>\n                : null}\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                value={message}\n                onChange={e => setMessage (e.target.value)}\n              />\n              <button onClick={handleSendMessage}>Send</button>\n            </div>\n          </div>\n        : null}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}